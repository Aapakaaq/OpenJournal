@startuml
'https://plantuml.com/class-diagram
hide circle
skinparam linetype polyline
interface IFileWriter {
 WriteFile(path: string, content: string) : bool
}

interface IParallelIO {
TraverseDirectoryForEach(directoryPath: string, action: Action<string> )
}
interface IFileReader<T>{
  ReadFromDirectory(path: string): ConcurrentQueue<T>
}

interface IIOUTils {
  DoesDirectoryExists(path: string): bool
  bool IsValidPath(path: string, allowRelativePaths: bool): bool;
}

interface IFileSystemDataAccess

class ParallelIO {
+ TraverseDirectoryForEach(directoryPath: string, action: Action<string>)

- SINGLE_THREAD_FILE_LIMIT
}

class ParallelJsonReaderService<ConcurrentQueue<JObject>> {
+ ReadFromDirectory(path: string): ConcurrentQueue<JObject>
- readJsonFile : Func<string, IFileSystemDataAccess, JObject?>
}

class FileSystemDataAccess

class JsonFileWrter {
WriteFile(path: string, content: string) : bool
}


IIOUTils <|.. IOUtils

IParallelIO <|.. ParallelIO
IOUtils o-- ParallelIO
FileSystemDataAccess *-- ParallelIO

FileSystemDataAccess *-- ParallelJsonReaderService
IFileReader <|.. ParallelJsonReaderService
ParallelIO *-- ParallelJsonReaderService

IFileSystemDataAccess <|.. FileSystemDataAccess

IOUtils o-- JsonFileWrter
IFileWriter <|.. JsonFileWrter

@enduml
