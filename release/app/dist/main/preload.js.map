{"version":3,"file":"preload.js","mappings":"CAAA,SAA2CA,EAAMC,GAChD,GAAsB,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,SACb,GAAqB,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,GAAIH,OACP,CACJ,IAAIK,EAAIL,IACR,IAAI,IAAIM,KAAKD,GAAuB,iBAAZJ,QAAuBA,QAAUF,GAAMO,GAAKD,EAAEC,EACvE,CACA,CATD,CASGC,QAAQ,I,mBCRX,IAAIC,EAAsB,CCA1BA,EAAyBP,IACH,oBAAXQ,QAA0BA,OAAOC,aAC1CC,OAAOC,eAAeX,EAASQ,OAAOC,YAAa,CAAEG,MAAO,WAE7DF,OAAOC,eAAeX,EAAS,aAAc,CAAEY,OAAO,GAAO,G,YCL9D,MAAM,EAA+BC,QAAQ,YCOvCC,EAAkB,CACtBC,YAAa,CACXC,YAAYC,KAAsBC,GAChC,EAAAH,YAAYI,KAAKF,KAAYC,EAC/B,EACAE,GAAGH,EAAmBI,GACpB,MAAMC,EAAe,CAACC,KAA6BL,IACjDG,KAAQH,GAGV,OAFA,EAAAH,YAAYK,GAAGH,EAASK,GAEjB,KACL,EAAAP,YAAYS,eAAeP,EAASK,EAAa,CAErD,EACAG,KAAKR,EAAmBI,GACtB,EAAAN,YAAYU,KAAKR,GAAS,CAACM,KAAWL,IAASG,KAAQH,IACzD,EACAQ,YAAiB,MAAEC,IAEjBC,QAAQC,IAAI,iBAAiBF,WAChB,EAAAZ,YAAYe,OC3BU,2BD2BgBH,KAGvDI,eAAgB,CAAC,G,OAWnB,EAAAC,cAAcC,kBAAkB,WAAYnB,G","sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///webpack/runtime/make namespace object","webpack:///external node-commonjs \"electron\"","webpack:///./src/main/preload.ts","webpack:///./src/main/Processes/ProcessTypes.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(global, () => {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"electron\");","// Disable no-unused-vars, broken for spread args\n/* eslint no-unused-vars: off */\nimport { contextBridge, ipcRenderer, IpcRendererEvent } from 'electron';\nimport {SAVE_JOURNAL_DISK} from \"./Processes/ProcessTypes\";\n\nexport type Channels = 'ipc-example';\n\nconst electronHandler = {\n  ipcRenderer: {\n    sendMessage(channel: Channels, ...args: unknown[]) {\n      ipcRenderer.send(channel, ...args);\n    },\n    on(channel: Channels, func: (...args: unknown[]) => void) {\n      const subscription = (_event: IpcRendererEvent, ...args: unknown[]) =>\n        func(...args);\n      ipcRenderer.on(channel, subscription);\n\n      return () => {\n        ipcRenderer.removeListener(channel, subscription);\n      };\n    },\n    once(channel: Channels, func: (...args: unknown[]) => void) {\n      ipcRenderer.once(channel, (_event, ...args) => func(...args));\n    },\n    async saveJournal( jsonString: string): Promise<boolean> {\n\n      console.log(`From preload: ${jsonString}`);\n      return await ipcRenderer.invoke(SAVE_JOURNAL_DISK, jsonString);\n    }\n  },\n  JournalService: {\n\n\n  }\n\n};\n\nconst serviceProcesses = {\n\n}\n\ncontextBridge.exposeInMainWorld('electron', electronHandler);\n\n\nexport type ElectronHandler = typeof electronHandler;\n","export const SAVE_JOURNAL_DISK: string = 'save-journal-json-string';\nexport const SAVE_JOURNAL_DISK_RESPONSE: string = 'save-journal-json-string-response';\n"],"names":["root","factory","exports","module","define","amd","a","i","global","__webpack_require__","Symbol","toStringTag","Object","defineProperty","value","require","electronHandler","ipcRenderer","sendMessage","channel","args","send","on","func","subscription","_event","removeListener","once","async","jsonString","console","log","invoke","JournalService","contextBridge","exposeInMainWorld"],"sourceRoot":""}